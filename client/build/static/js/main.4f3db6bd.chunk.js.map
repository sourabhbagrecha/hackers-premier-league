{"version":3,"sources":["contexts/team.context.js","components/PaginationActions.js","components/EnhancedTableHead.js","components/Leaderboard.js","components/AddTeam.js","components/PairTeams.js","App.js","reportWebVitals.js","index.js"],"names":["TeamsContext","createContext","TeamsProvider","children","useState","teams","setTeams","page","setPage","teamsCount","setTeamsCount","rowsPerPage","setRowsPerPage","refresh","setRefresh","Provider","value","toggleRefresh","useStyles","makeStyles","theme","root","flexShrink","marginLeft","spacing","PaginationActions","props","classes","useTheme","count","onChangePage","className","IconButton","onClick","event","disabled","aria-label","direction","LastPage","FirstPage","KeyboardArrowRight","KeyboardArrowLeft","Math","ceil","max","headCells","id","numeric","disablePadding","label","EnhancedTableHead","order","orderBy","onRequestSort","TableHead","TableRow","map","headCell","TableCell","align","padding","sortDirection","TableSortLabel","active","property","visuallyHidden","table","maxHeight","border","clip","height","margin","overflow","position","top","width","descendingComparator","a","b","getComparator","stableSort","array","comparator","stabilizedThis","el","index","sort","Leaderboard","useContext","setOrder","setOrderBy","searchQuery","setSearchQuery","useEffect","loadTeams","Axios","get","params","offset","limit","data","_","emptyRows","min","main","TableContainer","component","Paper","Table","stickyHeader","colSpan","TextField","onChange","e","target","fullWidth","variant","rowCount","TableBody","style","paddingBottom","overflowY","team","scope","team_name","score","wins","losses","ties","_id","TablePagination","rowsPerPageOptions","SelectProps","inputProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","submit","marginTop","input","AddTeam","name","setName","loading","setLoading","length","post","console","log","size","Button","color","pairOpen","PairTeams","open","setOpen","team1","setTeam1","team2","setTeam2","pair","decision","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","Grid","container","justify","item","Select","MenuItem","DialogActions","autoFocus","maxWidth","App","Typography","paddingTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4f3db6bd.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\r\n\r\nexport const TeamsContext = createContext()\r\n\r\nexport const TeamsProvider = ({ children }) => {\r\n  const [teams, setTeams] = useState([])\r\n  const [page, setPage] = useState(0)\r\n  const [teamsCount, setTeamsCount] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n  const [refresh, setRefresh] = useState(true)\r\n\r\n  const toggleRefresh = () => setRefresh(refresh => !refresh)\r\n\r\n  return <TeamsContext.Provider value={{ teams, setTeams, page, setPage, teamsCount, setTeamsCount, rowsPerPage, setRowsPerPage, refresh, toggleRefresh }}>\r\n    {children}\r\n  </TeamsContext.Provider>\r\n}\r\n\r\n","import {\r\n  makeStyles, \r\n  useTheme,\r\n  IconButton\r\n} from '@material-ui/core';\r\nimport React from 'react'\r\nimport {\r\n  LastPage,\r\n  FirstPage,\r\n  KeyboardArrowRight,\r\n  KeyboardArrowLeft\r\n} from '@material-ui/icons'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    marginLeft: theme.spacing(2.5),\r\n  },\r\n}));\r\n\r\nexport default function PaginationActions(props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const { count, page, rowsPerPage, onChangePage } = props;\r\n\r\n  const handleFirstPageButtonClick = (event) => {\r\n    onChangePage(event, 0);\r\n  };\r\n\r\n  const handleBackButtonClick = (event) => {\r\n    onChangePage(event, page - 1);\r\n  };\r\n\r\n  const handleNextButtonClick = (event) => {\r\n    onChangePage(event, page + 1);\r\n  };\r\n\r\n  const handleLastPageButtonClick = (event) => {\r\n    onChangePage(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <IconButton\r\n        onClick={handleFirstPageButtonClick}\r\n        disabled={page === 0}\r\n        aria-label=\"first page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <LastPage /> : <FirstPage />}\r\n      </IconButton>\r\n      <IconButton onClick={handleBackButtonClick} disabled={page === 0} aria-label=\"previous page\">\r\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleNextButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"next page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n      </IconButton>\r\n      <IconButton\r\n        onClick={handleLastPageButtonClick}\r\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n        aria-label=\"last page\"\r\n      >\r\n        {theme.direction === 'rtl' ? <FirstPage /> : <LastPage />}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}","import React from \"react\"\r\nimport { TableCell, TableHead, TableRow, TableSortLabel } from \"@material-ui/core\";\r\n\r\nconst headCells = [\r\n  { id: 'team_name', numeric: false, disablePadding: false, label: 'Team Name' },\r\n  { id: 'score', numeric: true, disablePadding: false, label: 'Score' },\r\n  { id: 'wins', numeric: true, disablePadding: false, label: 'Wins' },\r\n  { id: 'losses', numeric: true, disablePadding: false, label: 'Losses' },\r\n  { id: 'ties', numeric: true, disablePadding: false, label: 'Ties' },\r\n];\r\n\r\nexport default function EnhancedTableHead(props) {\r\n  const { classes, order, orderBy, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align=\"center\"\r\n            padding={headCell.disablePadding ? 'none' : 'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : 'asc'}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport Axios from 'axios';\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { TeamsContext } from '../contexts/team.context';\r\nimport PaginationActions from './PaginationActions';\r\nimport EnhancedTableHead from './EnhancedTableHead'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  table: {\r\n    maxHeight: 500,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}))\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction Leaderboard() {\r\n  const classes = useStyles()\r\n  const { teams, setTeams, page, setPage, teamsCount, setTeamsCount, rowsPerPage, setRowsPerPage, refresh } = useContext(TeamsContext)\r\n  const [order, setOrder] = useState('desc');\r\n  const [orderBy, setOrderBy] = useState('score');\r\n  const [searchQuery, setSearchQuery] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    loadTeams()\r\n  }, [rowsPerPage, page, order, orderBy, searchQuery, refresh])\r\n\r\n  const loadTeams = async () => {\r\n    const { data } = await Axios.get(\r\n      `http://localhost:4000/api/teams`,\r\n      {\r\n        params: {\r\n          offset: page * rowsPerPage,\r\n          limit: rowsPerPage,\r\n          order,\r\n          orderBy,\r\n          searchQuery\r\n        }\r\n      })\r\n    setTeams(_ => data.teams)\r\n    setTeamsCount(_ => data.teamsCount)\r\n    return\r\n  }\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, teamsCount - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <TableContainer className={classes.table} component={Paper}>\r\n        <Table stickyHeader aria-label=\"custom pagination table\">\r\n          <TableCell padding=\"none\" colSpan={5}>\r\n            <TextField value={searchQuery} onChange={e => setSearchQuery(e.target.value)} label=\"Search Team\" fullWidth variant=\"filled\"/>\r\n          </TableCell>\r\n          <EnhancedTableHead\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={rowsPerPage}\r\n          />\r\n          <TableBody style={{ maxHeight: 400, paddingBottom: \"100px\", overflowY: \"scroll\" }}>\r\n            {stableSort(teams, getComparator(order, orderBy))\r\n              .map((team) => (\r\n                <TableRow key={team._id}>\r\n                  <TableCell style={{ width: 100 }} component=\"th\" scope=\"row\">\r\n                    {team.team_name}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 100 }} align=\"center\">\r\n                    {team.score}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 100 }} align=\"center\">\r\n                    {team.wins}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 100 }} align=\"center\">\r\n                    {team.losses}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 100 }} align=\"center\">\r\n                    {team.ties}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TableRow style={{ margin: 0 }}>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100, { label: 'All', value: teamsCount }]}\r\n          colSpan={3}\r\n          count={teamsCount}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          SelectProps={{\r\n            inputProps: { 'aria-label': 'rows per page' },\r\n            native: true,\r\n          }}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          ActionsComponent={PaginationActions}\r\n        />\r\n      </TableRow>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leaderboard\r\n","import { Button, makeStyles, TextField } from '@material-ui/core'\r\nimport Axios from 'axios'\r\nimport React, { useContext, useState } from 'react'\r\nimport { TeamsContext } from '../contexts/team.context';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  main: {\r\n    margin: '10px auto',\r\n  },\r\n  submit: {\r\n    marginTop: 3,\r\n    marginLeft: 20\r\n  },\r\n  input: {\r\n    marginLeft: 20\r\n  }\r\n}))\r\n\r\nexport default function AddTeam() {\r\n  const [name, setName] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  const classes = useStyles()\r\n\r\n  const submit = async () => {\r\n    if (name.length < 4) {\r\n      return\r\n    }\r\n    setLoading(true)\r\n    const { data } = await Axios.post(\"http://localhost:4000/api/team/new\", { name })\r\n    console.log({ data })\r\n    setName(\"\")\r\n    setLoading(false)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <TextField size=\"small\" className={classes.input} variant=\"outlined\" label=\"New Team Name\" value={name} onChange={e => setName(e.target.value)}></TextField>\r\n      <Button className={classes.submit} onClick={submit} disabled={loading} variant=\"contained\" color=\"primary\">Add Team</Button>\r\n    </div>\r\n  )\r\n}\r\n","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Grid, makeStyles, MenuItem, Modal, Select, Typography } from '@material-ui/core'\r\nimport Axios from 'axios'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport { TeamsContext } from '../contexts/team.context'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  main: {\r\n    margin: '10px auto',\r\n  },\r\n  pairOpen: {\r\n    marginTop: 3\r\n  }\r\n}))\r\n\r\n\r\nexport default function PairTeams() {\r\n  const classes = useStyles()\r\n  const {toggleRefresh} = useContext(TeamsContext)\r\n  const [open, setOpen] = useState(false)\r\n  const [teams, setTeams] = useState([])\r\n  const [team1, setTeam1] = useState(\"\")\r\n  const [team2, setTeam2] = useState(\"\")\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadTeams()\r\n  }, [])\r\n\r\n  const loadTeams = async () => {\r\n    const { data } = await Axios.get(\"http://localhost:4000/api/teams-meta\")\r\n    setTeams(data.teams)\r\n    setTeam1(data.teams[0]._id)\r\n    setTeam2(data.teams[data.teams.length - 1]._id)\r\n  }\r\n  \r\n  const pair = async (decision) => {\r\n    const { data } = await Axios.post(\"http://localhost:4000/api/pair\", {team1, team2, decision})\r\n    console.log({data})\r\n    toggleRefresh()\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <Button className={classes.pairOpen} variant=\"contained\" color=\"secondary\" onClick={handleOpen}>\r\n        Pair Teams\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Select teams you want to pair\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          {teams.length > 0 ? \r\n            <>\r\n              <Grid container justify=\"space-evenly\" spacing={2}>\r\n                <Grid item>\r\n                  <Select value={team1} onChange={e => setTeam1(e.target.value)} label=\"Team 1\">\r\n                    {\r\n                      teams.map(team => <MenuItem value={team._id}>{team.team_name}</MenuItem>)\r\n                    }\r\n                  </Select>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Select value={team2} onChange={e => setTeam2(e.target.value)} label=\"Team 2\">\r\n                    {\r\n                      teams.map(team => <MenuItem value={team._id}>{team.team_name}</MenuItem>)\r\n                    }\r\n                  </Select>\r\n                </Grid>\r\n              </Grid>\r\n            </> \r\n            : \r\n            \"No teams available to pair.\"}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => pair(\"team1\")} color=\"primary\" autoFocus>\r\n            Team 1 Won\r\n          </Button>\r\n          <Button onClick={() => pair(\"team2\")} color=\"primary\" autoFocus>\r\n            Team 2 Won\r\n          </Button>\r\n          <Button onClick={() => pair(\"tie\")} color=\"primary\" autoFocus>\r\n            Match Tied\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n","import { Grid, makeStyles, ThemeProvider, Typography } from '@material-ui/core';\nimport React from 'react'\nimport Leaderboard from './components/Leaderboard'\nimport AddTeam from './components/AddTeam';\nimport { TeamsProvider } from './contexts/team.context';\nimport PairTeams from './components/PairTeams';\nimport \"./App.css\"\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    maxWidth: \"700px\",\n    margin: '0px auto'\n  }\n}))\n\nfunction App() {\n  const classes = useStyles()\n\n  return (\n    <div className=\"main-background\">\n      <div className={classes.main}>\n        <Typography style={{paddingTop: \"10px\"}} variant=\"h4\" align=\"center\">\n          Hackers Premier League\n        </Typography>\n        <TeamsProvider>\n          <Grid container spacing={3} justify=\"space-between\">\n            <Grid item>\n              <PairTeams/>\n            </Grid>\n            <Grid item>\n              <AddTeam />\n            </Grid>\n          </Grid>\n          <Leaderboard />\n        </TeamsProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}