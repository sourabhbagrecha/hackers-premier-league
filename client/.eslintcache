[{"C:\\Users\\Sourabh\\projects\\coda\\client\\src\\App.js":"1","C:\\Users\\Sourabh\\projects\\coda\\client\\src\\components\\Leaderboard.js":"2","C:\\Users\\Sourabh\\projects\\coda\\client\\src\\components\\AddTeam.js":"3","C:\\Users\\Sourabh\\projects\\coda\\client\\src\\contexts\\team.context.js":"4","C:\\Users\\Sourabh\\projects\\coda\\client\\src\\components\\PairTeams.js":"5","C:\\Users\\Sourabh\\projects\\coda\\client\\src\\index.js":"6","C:\\Users\\Sourabh\\projects\\coda\\client\\src\\reportWebVitals.js":"7","C:\\Users\\Sourabh\\projects\\coda\\client\\src\\components\\PaginationActions.js":"8","C:\\Users\\Sourabh\\projects\\coda\\client\\src\\components\\EnhancedTableHead.js":"9","C:\\Users\\Sourabh\\projects\\coda\\client\\src\\api\\server.js":"10"},{"size":1049,"mtime":1607757856461,"results":"11","hashOfConfig":"12"},{"size":5177,"mtime":1607762207847,"results":"13","hashOfConfig":"12"},{"size":1181,"mtime":1607758788741,"results":"14","hashOfConfig":"12"},{"size":663,"mtime":1607755589018,"results":"15","hashOfConfig":"12"},{"size":3245,"mtime":1607762917101,"results":"16","hashOfConfig":"12"},{"size":500,"mtime":1607689734381,"results":"17","hashOfConfig":"12"},{"size":362,"mtime":1607689734381,"results":"18","hashOfConfig":"12"},{"size":1954,"mtime":1607756348219,"results":"19","hashOfConfig":"12"},{"size":1643,"mtime":1607756639818,"results":"20","hashOfConfig":"12"},{"size":279,"mtime":1607763722263,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"3rkqc3",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Sourabh\\projects\\coda\\client\\src\\App.js",["46"],"import { Grid, makeStyles, ThemeProvider, Typography } from '@material-ui/core';\nimport React from 'react'\nimport Leaderboard from './components/Leaderboard'\nimport AddTeam from './components/AddTeam';\nimport { TeamsProvider } from './contexts/team.context';\nimport PairTeams from './components/PairTeams';\nimport \"./App.css\"\n\nconst useStyles = makeStyles(theme => ({\n  main: {\n    maxWidth: \"700px\",\n    margin: '0px auto'\n  }\n}))\n\nfunction App() {\n  const classes = useStyles()\n\n  return (\n    <div className=\"main-background\">\n      <div className={classes.main}>\n        <Typography style={{paddingTop: \"10px\"}} variant=\"h4\" align=\"center\">\n          Hackers Premier League\n        </Typography>\n        <TeamsProvider>\n          <Grid container spacing={3} justify=\"space-between\">\n            <Grid item>\n              <PairTeams/>\n            </Grid>\n            <Grid item>\n              <AddTeam />\n            </Grid>\n          </Grid>\n          <Leaderboard />\n        </TeamsProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\Sourabh\\projects\\coda\\client\\src\\components\\Leaderboard.js",["47","48"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport Axios from 'axios';\r\nimport {\r\n  makeStyles,\r\n  Paper,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TablePagination,\r\n  TableRow,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { TeamsContext } from '../contexts/team.context';\r\nimport PaginationActions from './PaginationActions';\r\nimport EnhancedTableHead from './EnhancedTableHead'\r\nimport server from '../api/server';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  table: {\r\n    maxHeight: 500,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}))\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nfunction Leaderboard() {\r\n  const classes = useStyles()\r\n  const { teams, setTeams, page, setPage, teamsCount, setTeamsCount, rowsPerPage, setRowsPerPage, refresh } = useContext(TeamsContext)\r\n  const [order, setOrder] = useState('desc');\r\n  const [orderBy, setOrderBy] = useState('score');\r\n  const [searchQuery, setSearchQuery] = useState(\"\")\r\n\r\n  useEffect(() => {\r\n    loadTeams()\r\n  }, [rowsPerPage, page, order, orderBy, searchQuery, refresh])\r\n\r\n  const loadTeams = async () => {\r\n    const { data } = await server.get(\r\n      `/api/teams`,\r\n      {\r\n        params: {\r\n          offset: page * rowsPerPage,\r\n          limit: rowsPerPage,\r\n          order,\r\n          orderBy,\r\n          searchQuery\r\n        }\r\n      })\r\n    setTeams(_ => data.teams)\r\n    setTeamsCount(_ => data.teamsCount)\r\n    return\r\n  }\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, teamsCount - page * rowsPerPage);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.main}>\r\n      <TableContainer className={classes.table} component={Paper}>\r\n        <Table stickyHeader aria-label=\"custom pagination table\">\r\n          <TableCell padding=\"none\" colSpan={5}>\r\n            <TextField value={searchQuery} onChange={e => setSearchQuery(e.target.value)} label=\"Search Team\" fullWidth variant=\"filled\"/>\r\n          </TableCell>\r\n          <EnhancedTableHead\r\n            classes={classes}\r\n            order={order}\r\n            orderBy={orderBy}\r\n            onRequestSort={handleRequestSort}\r\n            rowCount={rowsPerPage}\r\n          />\r\n          <TableBody style={{ maxHeight: 400, paddingBottom: \"100px\", overflowY: \"scroll\" }}>\r\n            {stableSort(teams, getComparator(order, orderBy))\r\n              .map((team) => (\r\n                <TableRow key={team._id}>\r\n                  <TableCell style={{ width: 100 }} component=\"th\" scope=\"row\">\r\n                    {team.team_name}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 100 }} align=\"center\">\r\n                    {team.score}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 100 }} align=\"center\">\r\n                    {team.wins}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 100 }} align=\"center\">\r\n                    {team.losses}\r\n                  </TableCell>\r\n                  <TableCell style={{ width: 100 }} align=\"center\">\r\n                    {team.ties}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n\r\n            {emptyRows > 0 && (\r\n              <TableRow style={{ height: 53 * emptyRows }}>\r\n                <TableCell colSpan={6} />\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TableRow style={{ margin: 0 }}>\r\n        <TablePagination\r\n          rowsPerPageOptions={[10, 25, 50, 100, { label: 'All', value: teamsCount }]}\r\n          colSpan={3}\r\n          count={teamsCount}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          SelectProps={{\r\n            inputProps: { 'aria-label': 'rows per page' },\r\n            native: true,\r\n          }}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          ActionsComponent={PaginationActions}\r\n        />\r\n      </TableRow>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Leaderboard\r\n","C:\\Users\\Sourabh\\projects\\coda\\client\\src\\components\\AddTeam.js",["49","50"],"C:\\Users\\Sourabh\\projects\\coda\\client\\src\\contexts\\team.context.js",[],"C:\\Users\\Sourabh\\projects\\coda\\client\\src\\components\\PairTeams.js",["51","52","53","54"],"C:\\Users\\Sourabh\\projects\\coda\\client\\src\\index.js",[],["55","56"],"C:\\Users\\Sourabh\\projects\\coda\\client\\src\\reportWebVitals.js",[],["57","58"],"C:\\Users\\Sourabh\\projects\\coda\\client\\src\\components\\PaginationActions.js",[],"C:\\Users\\Sourabh\\projects\\coda\\client\\src\\components\\EnhancedTableHead.js",[],"C:\\Users\\Sourabh\\projects\\coda\\client\\src\\api\\server.js",[],{"ruleId":"59","severity":1,"message":"60","line":1,"column":28,"nodeType":"61","messageId":"62","endLine":1,"endColumn":41},{"ruleId":"59","severity":1,"message":"63","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":13},{"ruleId":"64","severity":1,"message":"65","line":71,"column":6,"nodeType":"66","endLine":71,"endColumn":63,"suggestions":"67"},{"ruleId":"59","severity":1,"message":"68","line":3,"column":17,"nodeType":"61","messageId":"62","endLine":3,"endColumn":27},{"ruleId":"59","severity":1,"message":"69","line":4,"column":10,"nodeType":"61","messageId":"62","endLine":4,"endColumn":22},{"ruleId":"59","severity":1,"message":"70","line":1,"column":56,"nodeType":"61","messageId":"62","endLine":1,"endColumn":73},{"ruleId":"59","severity":1,"message":"71","line":1,"column":116,"nodeType":"61","messageId":"62","endLine":1,"endColumn":121},{"ruleId":"59","severity":1,"message":"72","line":1,"column":131,"nodeType":"61","messageId":"62","endLine":1,"endColumn":141},{"ruleId":"59","severity":1,"message":"63","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":13},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"73","replacedBy":"77"},{"ruleId":"75","replacedBy":"78"},"no-unused-vars","'ThemeProvider' is defined but never used.","Identifier","unusedVar","'Axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadTeams'. Either include it or remove the dependency array.","ArrayExpression",["79"],"'useContext' is defined but never used.","'TeamsContext' is defined but never used.","'DialogContentText' is defined but never used.","'Modal' is defined but never used.","'Typography' is defined but never used.","no-native-reassign",["80"],"no-negated-in-lhs",["81"],["80"],["81"],{"desc":"82","fix":"83"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [rowsPerPage, page, order, orderBy, searchQuery, refresh, loadTeams]",{"range":"84","text":"85"},[1806,1863],"[rowsPerPage, page, order, orderBy, searchQuery, refresh, loadTeams]"]